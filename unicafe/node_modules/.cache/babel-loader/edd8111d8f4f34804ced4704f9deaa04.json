{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\Downloads\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Row = ({\n  name,\n  value\n}) => /*#__PURE__*/_jsxDEV(\"center\", {\n  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n\n_c = Row;\n\nconst Statistics = props => {\n  const {\n    good,\n    neutral,\n    bad\n  } = props;\n  let all = good + neutral + bad;\n  let average = (good - bad) / all;\n  let positive = good * 100 / all;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            name: \"Good\",\n            value: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            name: \"Neutral\",\n            value: neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            name: \"Bad\",\n            value: bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            name: \"All\",\n            value: all\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            name: \"Average\",\n            value: average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            name: \"Positive\",\n            value: positive\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Statistics;\n\nfunction App() {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Give Feedback:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setGood(good + 1);\n      },\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setNeutral(neutral + 1);\n      },\n      children: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setBad(bad + 1);\n      },\n      children: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/surya/Downloads/part1/unicafe/src/App.js"],"names":["React","useState","Row","name","value","Statistics","props","good","neutral","bad","all","average","positive","App","setGood","setNeutral","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,kBACV;AAAA,yBACE;AAAA,4BACE;AAAA,gBACGD;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,gBACGC;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;KAAMF,G;;AAaN,MAAMG,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAuBH,KAA7B;AACA,MAAII,GAAG,GAAGH,IAAI,GAACC,OAAL,GAAaC,GAAvB;AACA,MAAIE,OAAO,GAAG,CAACJ,IAAI,GAACE,GAAN,IAAWC,GAAzB;AACA,MAAIE,QAAQ,GAAGL,IAAI,GAAC,GAAL,GAASG,GAAxB;AACA,sBACE;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,6BACE;AAAA,+BACE;AAAA,kCACE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,MAAV;AAAiB,YAAA,KAAK,EAAEH;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,SAAV;AAAoB,YAAA,KAAK,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,KAAV;AAAgB,YAAA,KAAK,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,SAAV;AAAoB,YAAA,KAAK,EAAEC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,UAAV;AAAqB,YAAA,KAAK,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAtBD;;MAAMP,U;;AAwBN,SAASQ,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBb,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACO,OAAD,EAAUO,UAAV,IAAwBd,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACQ,GAAD,EAAMO,MAAN,IAAgBf,QAAQ,CAAC,CAAD,CAA9B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACa,QAAAA,OAAO,CAACP,IAAI,GAAC,CAAN,CAAP;AAAgB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACQ,QAAAA,UAAU,CAACP,OAAO,GAAC,CAAT,CAAV;AAAsB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACQ,QAAAA,MAAM,CAACP,GAAG,GAAC,CAAL,CAAN;AAAc,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEF,IAAlB;AAAwB,MAAA,GAAG,EAAEE,GAA7B;AAAkC,MAAA,OAAO,EAAED;AAA3C;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAfQK,G;;MAAAA,G;AAiBT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react'\nimport './App.css';\n\nconst Row = ({name, value}) =>( \n  <center>\n    <tr>\n      <td>\n        {name}\n    </td>\n      <td>\n        {value}\n      </td>\n    </tr>\n  </center>\n)\n\nconst Statistics = (props) => {\n  const {good, neutral, bad} = props\n  let all = good+neutral+bad\n  let average = (good-bad)/all\n  let positive = good*100/all\n  return (\n    <div>\n        <h3>Statistics</h3>\n        <center>\n          <table>\n            <tbody>\n              <Row name=\"Good\" value={good} />\n              <Row name=\"Neutral\" value={neutral} />\n              <Row name=\"Bad\" value={bad} />\n              <Row name=\"All\" value={all} />\n              <Row name=\"Average\" value={average} />\n              <Row name=\"Positive\" value={positive} />\n            </tbody>\n          </table>\n        </center>\n    </div>\n  )\n}\n\nfunction App() {\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div className=\"App\">\n      <h3>Give Feedback:</h3>\n      <button onClick={()=>{setGood(good+1)}}>Good</button>\n      <button onClick={()=>{setNeutral(neutral+1)}}>Neutral</button>\n      <button onClick={()=>{setBad(bad+1)}}>Bad</button>\n      <Statistics good={good} bad={bad} neutral={neutral} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}