{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\Downloads\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Statistics = props => {\n  const {\n    good,\n    neutral,\n    bad\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), \"Good: \", good, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 19\n    }, this), \"Neutral: \", neutral, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 25\n    }, this), \"Bad: \", bad, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this), \"All: \", all, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }, this), \"Average: \", average, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }, this), \"Positive: \", positive, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Statistics;\n\nfunction App() {\n  _s();\n\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  let all = good + neutral + bad;\n  let average = (good - bad) / all;\n  let positive = good * 100 / all;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Give Feedback:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setGood(good + 1);\n      },\n      children: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 60\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setNeutral(neutral + 1);\n      },\n      children: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 69\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setBad(bad + 1);\n      },\n      children: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 57\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/surya/Downloads/part1/unicafe/src/App.js"],"names":["React","useState","Statistics","props","good","neutral","bad","all","average","positive","App","setGood","setNeutral","setBad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM;AAACC,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAuBH,KAA7B;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,YAESC,IAFT,eAEc;AAAA;AAAA;AAAA;AAAA,YAFd,eAGYC,OAHZ,eAGoB;AAAA;AAAA;AAAA;AAAA,YAHpB,WAIQC,GAJR,eAIY;AAAA;AAAA;AAAA;AAAA,YAJZ,WAKQC,GALR,eAKY;AAAA;AAAA;AAAA;AAAA,YALZ,eAMYC,OANZ,eAMoB;AAAA;AAAA;AAAA;AAAA,YANpB,gBAOaC,QAPb,oBAOuB;AAAA;AAAA;AAAA;AAAA,YAPvB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAdD;;KAAMP,U;;AAgBN,SAASQ,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACN,IAAD,EAAOO,OAAP,IAAkBV,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACI,OAAD,EAAUO,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACK,GAAD,EAAMO,MAAN,IAAgBZ,QAAQ,CAAC,CAAD,CAA9B;AAEA,MAAIM,GAAG,GAAGH,IAAI,GAACC,OAAL,GAAaC,GAAvB;AACA,MAAIE,OAAO,GAAG,CAACJ,IAAI,GAACE,GAAN,IAAWC,GAAzB;AACA,MAAIE,QAAQ,GAAGL,IAAI,GAAC,GAAL,GAASG,GAAxB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACI,QAAAA,OAAO,CAACP,IAAI,GAAC,CAAN,CAAP;AAAgB,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAEuD;AAAA;AAAA;AAAA;AAAA,YAFvD,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACQ,QAAAA,UAAU,CAACP,OAAO,GAAC,CAAT,CAAV;AAAsB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAGgE;AAAA;AAAA;AAAA;AAAA,YAHhE,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACQ,QAAAA,MAAM,CAACP,GAAG,GAAC,CAAL,CAAN;AAAc,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAIoD;AAAA;AAAA;AAAA;AAAA,YAJpD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAnBQI,G;;MAAAA,G;AAqBT,eAAeA,GAAf","sourcesContent":["import React, {useState} from 'react'\nimport './App.css';\n\nconst Statistics = (props) => {\n  const {good, neutral, bad} = props\n\n  return (\n    <div>\n      <h3>Statistics</h3>\n      Good: {good}<br/>\n      Neutral: {neutral}<br/>\n      Bad: {bad}<br/>\n      All: {all}<br/>\n      Average: {average}<br/>\n      Positive: {positive}%<br/>\n    </div>\n  )\n}\n\nfunction App() {\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  let all = good+neutral+bad\n  let average = (good-bad)/all\n  let positive = good*100/all\n\n  return (\n    <div className=\"App\">\n      <h3>Give Feedback:</h3>\n      <button onClick={()=>{setGood(good+1)}}>Good</button><br/>\n      <button onClick={()=>{setNeutral(neutral+1)}}>Neutral</button><br/>\n      <button onClick={()=>{setBad(bad+1)}}>Bad</button><br/>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}